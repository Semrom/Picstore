<?php /*** @author Thomas Allam / Romain Semler** @file Image.php** @date 25/02/2016** @brief Classe en charge des informations et des commentaires d'une image.*/
	class Image {

		public $bdd;

		function __construct($bdd) {
			$this->bdd = $bdd;
		}
		public function newImage($lien, $titre, $description, $theme, $confidentialite, $id) {			$req_insert = $this->bdd->prepare('INSERT INTO images (lien_img, titre_img, description_img, theme_img, is_public_img, nombre_aime_img, date_upload_img, suppression_img, id_user) VALUES(:lien, :titre, :description, :theme, :confidentialite, 0, NOW(), 0, :id)');			$req_insert->execute(array('lien' => $lien, 'titre' => $titre, 'description' => $description, 'theme' => $theme, 'confidentialite' => $confidentialite, 'id' => $id));			$req_insert->closeCursor();			$req_id = $this->bdd->prepare('SELECT id_img FROM images WHERE lien_img = :lien');			$req_id->execute(array('lien' => $lien));			$id_new_image = $req_id->fetch();			$req_id->closeCursor();			return $id_new_image;		}		public function getImage($id_img) {			$req_img = $this->bdd->prepare('SELECT * FROM images WHERE id_img = :img');			$req_img->execute(array('img' => $id_img));			$info_img = $req_img->fetch();			$req_img->closeCursor();			return $info_img;		}		
		public function getComImage($id_img) {
			$req_com = $this->bdd->prepare('SELECT * FROM commentaire WHERE id_img = :img');			$req_com->execute(array('img' => $id_img));
			$comment = $req_com->fetch();
			$req_com->closeCursor();			
			return $comment;
		}				public function getAllUserImages($id_user) {			$req_all_img = $this->bdd->prepare('SELECT id_img FROM images WHERE id_user = :id');			$req_all_img->execute(array('id' => $id_user));			$id_img = $req_all_img->fetchAll();			$req_all_img->closeCursor();						return $id_img;		}				public function getAllImages() {			$req_all_img = $this->bdd->prepare('SELECT id_img, lien_img, titre_img, description_img, theme_img, is_public_img, nombre_aime_img, DATE_FORMAT(date_upload_img, \'%d / %m / %Y\') AS date_upload_img, suppression_img, id_user FROM images ORDER BY id_img DESC');			$req_all_img->execute();			$data_img = $req_all_img->fetchAll();			$req_all_img->closeCursor();						return $data_img;		}				public function deleteImage($id_img) {						$get_lien = $this->bdd->prepare('SELECT lien_img FROM images WHERE id_img = :id');			$get_lien->execute(array('id' => $id_img));			$lien = $get_lien->fetch();			$get_lien->closeCursor();						$req_del = $this->bdd->prepare('DELETE FROM images WHERE id_img = :id');			$req_del_link = $this->bdd->prepare('DELETE FROM posseder_image WHERE id_img = :id');						$req_del->execute(array('id' => $id_img));			$req_del_link->execute(array('id' => $id_img));						$req_del->closeCursor();			$req_del_link->closeCursor();						unlink('../../img/upload/' . $lien['lien_img']);			unlink('../../img/upload/mini/' . $lien['lien_img']);						return true;		}				public function deleteUserImages($id_user) {					$all_id = $this->getAllUserImages($id_user);						foreach ($all_id as $id => $valeur) {							$this->deleteImage($valeur['id_img']);			}						return true;		}				public function getNbJaime($id_user) {					$nb_aime = $this->bdd->prepare('SELECT nombre_aime_img FROM images WHERE id_user = :id');			$nb_aime->execute(array('id' => $id_user));			$rep = $nb_aime->fetchAll();			$nb_aime->closeCursor();						$nombre_aime = 0;						foreach ($rep as $valeur) {							$nombre_aime = $nombre_aime + $valeur['nombre_aime_img'];			}						return $nombre_aime;		}				public function estAime($id_user, $id_img) {					$check_like = $this->bdd->prepare('SELECT * FROM aimer_image WHERE id_user = :id1 AND id_img = :id2');			$check_like->execute(array('id1' => $id_user, 'id2' => $id_img));			$rep = $check_like->fetch();			$check_like->closeCursor();						if (empty($rep)) {				return false;			} else {				return true;			}		}				public function aimer($id_user, $id_img) {					/* SI L'IMAGE N'EST PAS DEJA AIME (NORMALEMENT VERIFIE AVANT) */			if ($this->estAime($id_user, $id_img)) {								return false;							} else {							/* INSERTION DANS LA TABLE DES J'AIME */				$like = $this->bdd->prepare('INSERT INTO aimer_image (id_user, id_img) VALUES(:id1, :id2)');				$like->execute(array('id1' => $id_user, 'id2' => $id_img));				$like->closeCursor();								/* MISE A JOUR DU NOMBRE DE J'AIME SUR L'IMAGE */				$update = $this->bdd->prepare('UPDATE images SET nombre_aime_img = nombre_aime_img + 1 WHERE id_img = :img');				$update->execute(array('img' => $id_img));				$update->closeCursor();								return true;			}				}				public function pasAimer($id_user, $id_img) {					/* SI L'IMAGE EST BIEN AIME PAR LA PERSONNE (NORMALEMENT VERIFIE AVANT) */			if ($this->estAime($id_user, $id_img)) {								/* SUPPRESSION DANS LA TABLE DES J'AIME */				$dislike = $this->bdd->prepare('DELETE FROM aimer_image WHERE id_user = :id1 AND id_img = :id2');				$dislike->execute(array('id1' => $id_user, 'id2' => $id_img));				$dislike->closeCursor();								/* MISE A JOUR DU NOMBRE DE J'AIME SUR L'IMAGE */				$update = $this->bdd->prepare('UPDATE images SET nombre_aime_img = nombre_aime_img - 1 WHERE id_img = :img');				$update->execute(array('img' => $id_img));				$update->closeCursor();								return true;							} else {							return false;			}			}				public function getImagesForSearch($donnee) {			$req_img = $this->bdd->prepare("SELECT id_img, id_user, titre_img, lien_img FROM images WHERE is_public_img = 'true' AND (titre_img LIKE :data OR description_img LIKE :data OR theme_img LIKE :data)");			$req_img->execute(array('data' => "%" . $donnee . "%" ));			$donnee = $req_img->fetchAll();			$req_img->closeCursor();						return $donnee;		}				public function getImagesForSearchByThemes($donnee) {			$req_img = $this->bdd->prepare("SELECT id_img, id_user, titre_img, lien_img FROM images WHERE is_public_img = 'true' AND theme_img = :data");			$req_img->execute(array('data' => $donnee));			$donnee = $req_img->fetchAll();			$req_img->closeCursor();						return $donnee;		}	}